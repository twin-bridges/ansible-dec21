
Create a new directory that includes a playbook and a "group_vars" directory.

The group_vars directory should contain a "cisco" subdirectory. Inside this 
"group_vars/cisco" subdirectory, create a file named "bgp.yml". Inside this 
"bgp.yml" file create a variable for "bgp_asn" and assign it a value between 
65000 and 65535. 

Use the "ansible.builtin.debug" module to print a message to stdout (run the
play against the "cisco" group). The message should look similar to the following:

TASK [Print BGP ASN for cisco hosts] *****************************************
ok: [cisco1] => {
    "msg": "The ASN for host cisco1 is 65001"
}
ok: [cisco5] => {
    "msg": "The ASN for host cisco5 is 65001"
}
ok: [cisco2] => {
    "msg": "The ASN for host cisco2 is 65001"
}
ok: [cisco6] => {
    "msg": "The ASN for host cisco6 is 65001"
}


2b. Create a "host_vars" directory, and a subdirectory named "cisco5" within it. 
Inside this, "host_vars/cisco5", create a file named "bgp.yml". Inside this file, 
create a variable named "bgp_asn" using a different ASN value. Re-run the Playbook. 
You should observe that the host_vars "bgp_asn" has higher priority than the 
group_vars "bgp_asn" variable.


2c. Create the following subdirectories: cisco1, cisco2, cisco6 (inside the host_vars 
directory). The "host_vars/cisco5" subdirectory should already exist. Note, the 
directory names must exactly match the Ansible "inventory_hostname". In each of 
these "host_vars/ciscox" directories create a file named "ip_addresses.yml". Inside 
this file create a "loopback0" variable and assign this variable a unique IPv4 
address (for example, 10.1.1.1 for cisco1).

Execute a playbook that prints out both the "bgp_asn" and the "loopback0" IP address.

